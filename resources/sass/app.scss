// Fonts
@import url('https://fonts.googleapis.com/css?family=Nunito');

// Variables
@import 'variables';

// Bootstrap
@import '~bootstrap/scss/bootstrap';

// Default styling for light theme background animation
body {
  animation-name: BgFadeLight;
  animation-duration: 10s;
  animation-direction: alternate;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  color: $bodytext-light;
}

// Dark mode background animation
body.dark {
  animation-name: BgFadeDark;
  color: $bodytext-dark;
}

body.noscroll {
  overflow-y: hidden;
}

// Keyframes for both background animations
@keyframes BgFadeLight {
  0% {
    background-color: #96b0d1;
  }
  50% {
    background-color: #b1d196;
  }
  100% {
    background-color: #bb96d1;
  }
}
@keyframes BgFadeDark {
  0% {
    background-color: #101b29;
  }
  50% {
    background-color: #102912;
  }
  100% {
    background-color: #291027;
  }
}

// Initialize the font-size of the root element to 10px
// All other sizing will be based of this via rem units
:root {
  font-size: 10px;
}

// Main view container
main {
  width: 100%;
  max-width: 120rem;
  padding: 2rem;
  padding-top: 0;
  box-sizing: border-box;
  margin: 0 auto;
}

// Photographer profile header
header.primary {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  padding: 2rem;
  background-color: $panelbg-light;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
  border-radius: 5px;

  // Break to mobile layout under 950px viewport width
  @media (max-width: 950px) {
    flex-direction: column;

    > div {
      max-width: 25rem;
      padding: 2rem;
    }
  }

  .profile-picture {
    max-width: 25rem;
  }

  .bio,
  .contact {
    padding: 4rem 2rem;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-end;
  }

  .bio {
    flex: 1;
  }

  .contact {
    div {
      margin-bottom: 1rem;

      label,
      a {
        display: block;
        margin: 0;
        padding: 0;
      }
    }

    div:last-of-type {
      margin-bottom: 0;
    }
  }
}

// Adjust for dark theme
.dark header.primary {
  background-color: $panelbg-dark;
}

// Secondary, textual header
header.textual {
  h1 {
    margin-bottom: 2rem;
  }

  h2 {
    margin: 2rem 0;
    text-align: center;
    font-size: $font-size-subheading;
  }
}

// Profile picture object
.profile-picture {
  width: 100%;
  max-width: 15rem;
  padding: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;

  div {
    width: 100%;
    height: 0;
    // Use padding-bottom: 100% to trick it into displaying a responsive fixed aspect ratio square
    padding-bottom: 100%;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    border-radius: 100%;
  }
}

// Gallery container
.gallery {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;

  // Gallery photo card object
  .photo-card {
    display: flex;
    flex-direction: column;
    width: calc(33% - 2rem);
    min-width: 30rem;
    margin: 1rem;
    background-color: $panelbg-light;
    border-radius: 5px;
    overflow: hidden;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    cursor: pointer;

    header {
      font-size: $font-size-subheading;
      font-weight: $font-weight-bold;
      color: #FFF;
      text-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
      padding: 2rem;
      padding-top: 16rem;
      margin-bottom: 1rem;
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
    }

    p {
      font-size: $font-size-body;
      box-sizing: border-box;
      padding: 1rem 4rem 0 4rem;
      text-align: justify;
    }

    footer {
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      padding: 1rem 4rem;
      margin-bottom: 1rem;
      font-size: $font-size-body;

      svg {
        color: lighten($red, 20%);
        font-size: $font-size-subheading;
      }

      time {
        color: #AAA;
      }
    }
  }
}

// Adjust for dark theme
.dark .gallery .photo-card {
  background-color: $panelbg-dark;
}

// Photographer's profile link object
.profile-link {
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  background-color: $panelbg-light;
  border-radius: 5px;
  overflow: hidden;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
  padding: 2rem;
  margin-bottom: 2rem;
  text-decoration: none !important;

  header {
    font-size: $font-size-subheading;
  }

  p {
    color: $bodytext-light;
    padding-right: 2rem;
  }

  svg {
    font-size: $font-size-heading;
    margin-left: auto;

    // Switch margin to top on mobile breakpoint
    @media(max-width: 950px) {
      margin-left: 0;
      margin-top: 2rem;
    }
  }

  // Use column direction on mobile
  @media (max-width: 950px) {
    flex-direction: column;
    text-align: center;
  }
}

// Adjust for dark theme
.dark .profile-link {
  background-color: $panelbg-dark;

  p {
    color: $bodytext-dark;
  }
}

// Grid of square album links
.album-grid {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  flex-wrap: wrap;

  // Individual album link
  .album-link {
    width: calc(33% - 2rem);
    background-color: $panelbg-light;
    border-radius: 5px;
    overflow: hidden;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
    margin: 1rem;
    min-width: 30rem;

    div {
      // Position the outer square as relative, so we can absolutely position elements to it vvvv
      position: relative;
      width: 100%;
      height: 0;
      // Use the same square aspect ratio trick here
      padding-bottom: 100%;

      span {
        // This is the element we want to absolutely position to the parent ^^^^
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }

  // Space the elements around on mobile
  @media (max-width: 950px) {
    justify-content: space-around;
  }
}

// Adjust for dark theme
.dark .album-grid .album-link {
  background-color: $panelbg-dark;
}

// Top navigation element
nav {
  margin-bottom: 2rem;
  padding: 0;
  background-color: $panelbg-light;
  border-bottom-right-radius: 5px;
  border-bottom-left-radius: 5px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.25);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;

  // Breadcrumb link list
  ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    min-width: 0;
    margin: 0;

    li {
      padding: 1rem;
      min-width: 0;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  // Custom CSS for the toggle/label
  label {
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 1rem;

    span {
      margin-right: 1rem;

      // Hide the label on mobile
      @media (max-width: 950px) {
        display: none;
      }
    }
  }
}

// Adjust for dark theme
.dark nav {
  background-color: $panelbg-dark;
}

// Position the icons correctly within the toggle
.react-switch-bg > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Adjust the colours of the light and dark theme icons
.react-switch-bg > div:first-of-type {
  color: #000;
}
.react-switch-bg > div:last-of-type {
  color: #FFF;
}

// Remove margin on the final profile link
.profile-link:last-of-type {
  margin-bottom: 0;
}

// Styling for the loader component
.loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  color: $bodytext-light;
  font-size: $font-size-subheading;
  display: flex;
  align-items: center;
  justify-content: center;

  div {
    display: flex;
    flex-direction: row;
    align-items: center;

    svg {
      margin-right: 2rem;
    }
  }
}

// Dark theme adjustments for the loader
.dark .loader {
  color: $bodytext-dark;
}

// Basic element styling
h1 {
  font-size: $font-size-heading;
  font-weight: $font-weight-bold;
}

p,
label,
a {
  font-size: $font-size-body;
  font-weight: $font-weight-light;
}

label {
  font-weight: $font-weight-semibold;
  color: #777;
}

a {
  color: $red;
}

a:hover {
  color: darken($red, 20%);
}